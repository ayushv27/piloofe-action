version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: piloo-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-piloo_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - piloo-network

  # Piloo.ai Application
  piloo-app:
    build:
      context: .
      target: ${BUILD_TARGET:-production}
    container_name: piloo-app
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-piloo_db}
      DJANGO_API_ROOT: ${DJANGO_API_ROOT:-http://django-backend:8000/api}
      SESSION_SECRET: ${SESSION_SECRET}
      # Optional AI/External Service Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY:-}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY:-}
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Development volume mounts (only active in dev mode)
      - ${DEV_VOLUME_MOUNT:-./empty}:/app
    networks:
      - piloo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Django Backend (Optional - for AI video processing)
  django-backend:
    image: ${DJANGO_IMAGE:-piloo/django-backend:latest}
    container_name: piloo-django
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-backend.settings.production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-piloo_db}_django
      DEBUG: ${DJANGO_DEBUG:-false}
    ports:
      - "${DJANGO_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - piloo-network
    profiles:
      - django
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: piloo-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - piloo-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: piloo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - piloo-app
    networks:
      - piloo-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  empty:  # Placeholder volume for development

networks:
  piloo-network:
    driver: bridge